// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: graph/graph.proto

package workflow

import (
	pluginrunner "github.com/MyWeHub/plugin-sdk/gen/pluginrunner"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataType int32

const (
	DataType_FIELD DataType = 0
	DataType_EVENT DataType = 1
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0: "FIELD",
		1: "EVENT",
	}
	DataType_value = map[string]int32{
		"FIELD": 0,
		"EVENT": 1,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_graph_graph_proto_enumTypes[0].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_graph_graph_proto_enumTypes[0]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_graph_graph_proto_rawDescGZIP(), []int{0}
}

type WarningType int32

const (
	WarningType_UNKNOWN       WarningType = 0
	WarningType_UPDATE_CONFIG WarningType = 1
)

// Enum value maps for WarningType.
var (
	WarningType_name = map[int32]string{
		0: "UNKNOWN",
		1: "UPDATE_CONFIG",
	}
	WarningType_value = map[string]int32{
		"UNKNOWN":       0,
		"UPDATE_CONFIG": 1,
	}
)

func (x WarningType) Enum() *WarningType {
	p := new(WarningType)
	*p = x
	return p
}

func (x WarningType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WarningType) Descriptor() protoreflect.EnumDescriptor {
	return file_graph_graph_proto_enumTypes[1].Descriptor()
}

func (WarningType) Type() protoreflect.EnumType {
	return &file_graph_graph_proto_enumTypes[1]
}

func (x WarningType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WarningType.Descriptor instead.
func (WarningType) EnumDescriptor() ([]byte, []int) {
	return file_graph_graph_proto_rawDescGZIP(), []int{1}
}

type LinkOption int32

const (
	LinkOption_Default   LinkOption = 0
	LinkOption_Override  LinkOption = 1
	LinkOption_Aggregate LinkOption = 2
)

// Enum value maps for LinkOption.
var (
	LinkOption_name = map[int32]string{
		0: "Default",
		1: "Override",
		2: "Aggregate",
	}
	LinkOption_value = map[string]int32{
		"Default":   0,
		"Override":  1,
		"Aggregate": 2,
	}
)

func (x LinkOption) Enum() *LinkOption {
	p := new(LinkOption)
	*p = x
	return p
}

func (x LinkOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkOption) Descriptor() protoreflect.EnumDescriptor {
	return file_graph_graph_proto_enumTypes[2].Descriptor()
}

func (LinkOption) Type() protoreflect.EnumType {
	return &file_graph_graph_proto_enumTypes[2]
}

func (x LinkOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkOption.Descriptor instead.
func (LinkOption) EnumDescriptor() ([]byte, []int) {
	return file_graph_graph_proto_rawDescGZIP(), []int{2}
}

type Graph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes    map[string]*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Links    map[string]*Links `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Viewport *Viewport         `protobuf:"bytes,3,opt,name=viewport,proto3" json:"viewport,omitempty"`
	// todo: remove this since we moved it to WorkflowVersion
	IsSubworkflow *bool `protobuf:"varint,4,opt,name=isSubworkflow,proto3,oneof" json:"isSubworkflow,omitempty"`
	// todo: don't remove this one please
	ResourceEngagement *ResourceEngagement `protobuf:"bytes,5,opt,name=resourceEngagement,proto3,oneof" json:"resourceEngagement,omitempty"`
}

func (x *Graph) Reset() {
	*x = Graph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_graph_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Graph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Graph) ProtoMessage() {}

func (x *Graph) ProtoReflect() protoreflect.Message {
	mi := &file_graph_graph_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Graph.ProtoReflect.Descriptor instead.
func (*Graph) Descriptor() ([]byte, []int) {
	return file_graph_graph_proto_rawDescGZIP(), []int{0}
}

func (x *Graph) GetNodes() map[string]*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Graph) GetLinks() map[string]*Links {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *Graph) GetViewport() *Viewport {
	if x != nil {
		return x.Viewport
	}
	return nil
}

func (x *Graph) GetIsSubworkflow() bool {
	if x != nil && x.IsSubworkflow != nil {
		return *x.IsSubworkflow
	}
	return false
}

func (x *Graph) GetResourceEngagement() *ResourceEngagement {
	if x != nil {
		return x.ResourceEngagement
	}
	return nil
}

type Viewport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X    float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y    float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Zoom float64 `protobuf:"fixed64,3,opt,name=zoom,proto3" json:"zoom,omitempty"`
}

func (x *Viewport) Reset() {
	*x = Viewport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_graph_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Viewport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Viewport) ProtoMessage() {}

func (x *Viewport) ProtoReflect() protoreflect.Message {
	mi := &file_graph_graph_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Viewport.ProtoReflect.Descriptor instead.
func (*Viewport) Descriptor() ([]byte, []int) {
	return file_graph_graph_proto_rawDescGZIP(), []int{1}
}

func (x *Viewport) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Viewport) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Viewport) GetZoom() float64 {
	if x != nil {
		return x.Zoom
	}
	return 0
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OffsetX           *float64 `protobuf:"fixed64,1,opt,name=offsetX,proto3,oneof" json:"offsetX,omitempty"`
	OffsetY           *float64 `protobuf:"fixed64,2,opt,name=offsetY,proto3,oneof" json:"offsetY,omitempty"`
	LinksIds          []string `protobuf:"bytes,3,rep,name=linksIds,proto3" json:"linksIds,omitempty"`
	NodeCoordinationX *float64 `protobuf:"fixed64,4,opt,name=nodeCoordinationX,proto3,oneof" json:"nodeCoordinationX,omitempty"`
	NodeCoordinationY *float64 `protobuf:"fixed64,5,opt,name=nodeCoordinationY,proto3,oneof" json:"nodeCoordinationY,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_graph_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_graph_graph_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_graph_graph_proto_rawDescGZIP(), []int{2}
}

func (x *Metadata) GetOffsetX() float64 {
	if x != nil && x.OffsetX != nil {
		return *x.OffsetX
	}
	return 0
}

func (x *Metadata) GetOffsetY() float64 {
	if x != nil && x.OffsetY != nil {
		return *x.OffsetY
	}
	return 0
}

func (x *Metadata) GetLinksIds() []string {
	if x != nil {
		return x.LinksIds
	}
	return nil
}

func (x *Metadata) GetNodeCoordinationX() float64 {
	if x != nil && x.NodeCoordinationX != nil {
		return *x.NodeCoordinationX
	}
	return 0
}

func (x *Metadata) GetNodeCoordinationY() float64 {
	if x != nil && x.NodeCoordinationY != nil {
		return *x.NodeCoordinationY
	}
	return 0
}

type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label      string                            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Definition *pluginrunner.TransformationField `protobuf:"bytes,3,opt,name=definition,proto3" json:"definition,omitempty"`
	Metadata   *Metadata                         `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	SectionId  string                            `protobuf:"bytes,5,opt,name=sectionId,proto3" json:"sectionId,omitempty"`
	DataType   DataType                          `protobuf:"varint,6,opt,name=dataType,proto3,enum=workflow.DataType" json:"dataType,omitempty"`
	Hide       *bool                             `protobuf:"varint,7,opt,name=hide,proto3,oneof" json:"hide,omitempty"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_graph_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_graph_graph_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_graph_graph_proto_rawDescGZIP(), []int{3}
}

func (x *Field) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Field) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Field) GetDefinition() *pluginrunner.TransformationField {
	if x != nil {
		return x.Definition
	}
	return nil
}

func (x *Field) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Field) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

func (x *Field) GetDataType() DataType {
	if x != nil {
		return x.DataType
	}
	return DataType_FIELD
}

func (x *Field) GetHide() bool {
	if x != nil && x.Hide != nil {
		return *x.Hide
	}
	return false
}

type Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label         string    `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Fields        []*Field  `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	Metadata      *Metadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	HeaderVisible bool      `protobuf:"varint,5,opt,name=headerVisible,proto3" json:"headerVisible,omitempty"`
}

func (x *Section) Reset() {
	*x = Section{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_graph_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Section) ProtoMessage() {}

func (x *Section) ProtoReflect() protoreflect.Message {
	mi := &file_graph_graph_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Section.ProtoReflect.Descriptor instead.
func (*Section) Descriptor() ([]byte, []int) {
	return file_graph_graph_proto_rawDescGZIP(), []int{4}
}

func (x *Section) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Section) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Section) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Section) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Section) GetHeaderVisible() bool {
	if x != nil {
		return x.HeaderVisible
	}
	return false
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label                 string     `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	X                     float64    `protobuf:"fixed64,3,opt,name=x,proto3" json:"x,omitempty"`
	Y                     float64    `protobuf:"fixed64,4,opt,name=y,proto3" json:"y,omitempty"`
	Width                 uint32     `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Height                uint32     `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	PluginType            string     `protobuf:"bytes,7,opt,name=pluginType,proto3" json:"pluginType,omitempty"`
	Inputs                []*Section `protobuf:"bytes,8,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs               []*Section `protobuf:"bytes,9,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Type                  string     `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Configuration         []byte     `protobuf:"bytes,11,opt,name=configuration,proto3,oneof" json:"configuration,omitempty"`
	Sublabel              *string    `protobuf:"bytes,12,opt,name=sublabel,proto3,oneof" json:"sublabel,omitempty"`
	Metadata              *Metadata  `protobuf:"bytes,13,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
	ConfigurationEnabled  *bool      `protobuf:"varint,14,opt,name=configurationEnabled,proto3,oneof" json:"configurationEnabled,omitempty"`
	Action                int32      `protobuf:"varint,15,opt,name=action,proto3" json:"action,omitempty"`
	Version               uint32     `protobuf:"varint,16,opt,name=version,proto3" json:"version,omitempty"`
	StrictDataAcceptance  *bool      `protobuf:"varint,17,opt,name=strictDataAcceptance,proto3,oneof" json:"strictDataAcceptance,omitempty"`
	StopWorkflowOnFailure *bool      `protobuf:"varint,18,opt,name=stopWorkflowOnFailure,proto3,oneof" json:"stopWorkflowOnFailure,omitempty"`
	Warning               *Warning   `protobuf:"bytes,19,opt,name=warning,proto3,oneof" json:"warning,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_graph_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_graph_graph_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_graph_graph_proto_rawDescGZIP(), []int{5}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Node) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Node) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Node) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Node) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Node) GetPluginType() string {
	if x != nil {
		return x.PluginType
	}
	return ""
}

func (x *Node) GetInputs() []*Section {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Node) GetOutputs() []*Section {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *Node) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Node) GetConfiguration() []byte {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *Node) GetSublabel() string {
	if x != nil && x.Sublabel != nil {
		return *x.Sublabel
	}
	return ""
}

func (x *Node) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Node) GetConfigurationEnabled() bool {
	if x != nil && x.ConfigurationEnabled != nil {
		return *x.ConfigurationEnabled
	}
	return false
}

func (x *Node) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *Node) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Node) GetStrictDataAcceptance() bool {
	if x != nil && x.StrictDataAcceptance != nil {
		return *x.StrictDataAcceptance
	}
	return false
}

func (x *Node) GetStopWorkflowOnFailure() bool {
	if x != nil && x.StopWorkflowOnFailure != nil {
		return *x.StopWorkflowOnFailure
	}
	return false
}

func (x *Node) GetWarning() *Warning {
	if x != nil {
		return x.Warning
	}
	return nil
}

type ResourceEngagement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SchemaIdList     []string `protobuf:"bytes,1,rep,name=schemaIdList,proto3" json:"schemaIdList,omitempty"`
	ConnectionIdList []string `protobuf:"bytes,2,rep,name=connectionIdList,proto3" json:"connectionIdList,omitempty"`
}

func (x *ResourceEngagement) Reset() {
	*x = ResourceEngagement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_graph_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceEngagement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceEngagement) ProtoMessage() {}

func (x *ResourceEngagement) ProtoReflect() protoreflect.Message {
	mi := &file_graph_graph_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceEngagement.ProtoReflect.Descriptor instead.
func (*ResourceEngagement) Descriptor() ([]byte, []int) {
	return file_graph_graph_proto_rawDescGZIP(), []int{6}
}

func (x *ResourceEngagement) GetSchemaIdList() []string {
	if x != nil {
		return x.SchemaIdList
	}
	return nil
}

func (x *ResourceEngagement) GetConnectionIdList() []string {
	if x != nil {
		return x.ConnectionIdList
	}
	return nil
}

type Warning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    WarningType `protobuf:"varint,1,opt,name=Type,proto3,enum=workflow.WarningType" json:"Type,omitempty"`
	Message string      `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *Warning) Reset() {
	*x = Warning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_graph_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Warning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Warning) ProtoMessage() {}

func (x *Warning) ProtoReflect() protoreflect.Message {
	mi := &file_graph_graph_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Warning.ProtoReflect.Descriptor instead.
func (*Warning) Descriptor() ([]byte, []int) {
	return file_graph_graph_proto_rawDescGZIP(), []int{7}
}

func (x *Warning) GetType() WarningType {
	if x != nil {
		return x.Type
	}
	return WarningType_UNKNOWN
}

func (x *Warning) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Destinationnodes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationNode      string   `protobuf:"bytes,1,opt,name=destinationNode,proto3" json:"destinationNode,omitempty"`
	DestinationEndpoints []string `protobuf:"bytes,2,rep,name=destinationEndpoints,proto3" json:"destinationEndpoints,omitempty"`
	DestinationSectionId string   `protobuf:"bytes,3,opt,name=destinationSectionId,proto3" json:"destinationSectionId,omitempty"`
}

func (x *Destinationnodes) Reset() {
	*x = Destinationnodes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_graph_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Destinationnodes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Destinationnodes) ProtoMessage() {}

func (x *Destinationnodes) ProtoReflect() protoreflect.Message {
	mi := &file_graph_graph_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Destinationnodes.ProtoReflect.Descriptor instead.
func (*Destinationnodes) Descriptor() ([]byte, []int) {
	return file_graph_graph_proto_rawDescGZIP(), []int{8}
}

func (x *Destinationnodes) GetDestinationNode() string {
	if x != nil {
		return x.DestinationNode
	}
	return ""
}

func (x *Destinationnodes) GetDestinationEndpoints() []string {
	if x != nil {
		return x.DestinationEndpoints
	}
	return nil
}

func (x *Destinationnodes) GetDestinationSectionId() string {
	if x != nil {
		return x.DestinationSectionId
	}
	return ""
}

type Links struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DestinationNodes []*Destinationnodes           `protobuf:"bytes,2,rep,name=destinationNodes,proto3" json:"destinationNodes,omitempty"`
	SourceEndpoint   string                        `protobuf:"bytes,3,opt,name=sourceEndpoint,proto3" json:"sourceEndpoint,omitempty"`
	SourceNode       string                        `protobuf:"bytes,4,opt,name=sourceNode,proto3" json:"sourceNode,omitempty"`
	SourceSectionId  string                        `protobuf:"bytes,5,opt,name=sourceSectionId,proto3" json:"sourceSectionId,omitempty"`
	DataType         pluginrunner.EndpointDataType `protobuf:"varint,6,opt,name=dataType,proto3,enum=pluginrunner.EndpointDataType" json:"dataType,omitempty"`
	LinkOption       *LinkOption                   `protobuf:"varint,7,opt,name=linkOption,proto3,enum=workflow.LinkOption,oneof" json:"linkOption,omitempty"`
	Mandatory        *bool                         `protobuf:"varint,8,opt,name=mandatory,proto3,oneof" json:"mandatory,omitempty"`
}

func (x *Links) Reset() {
	*x = Links{}
	if protoimpl.UnsafeEnabled {
		mi := &file_graph_graph_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Links) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Links) ProtoMessage() {}

func (x *Links) ProtoReflect() protoreflect.Message {
	mi := &file_graph_graph_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Links.ProtoReflect.Descriptor instead.
func (*Links) Descriptor() ([]byte, []int) {
	return file_graph_graph_proto_rawDescGZIP(), []int{9}
}

func (x *Links) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Links) GetDestinationNodes() []*Destinationnodes {
	if x != nil {
		return x.DestinationNodes
	}
	return nil
}

func (x *Links) GetSourceEndpoint() string {
	if x != nil {
		return x.SourceEndpoint
	}
	return ""
}

func (x *Links) GetSourceNode() string {
	if x != nil {
		return x.SourceNode
	}
	return ""
}

func (x *Links) GetSourceSectionId() string {
	if x != nil {
		return x.SourceSectionId
	}
	return ""
}

func (x *Links) GetDataType() pluginrunner.EndpointDataType {
	if x != nil {
		return x.DataType
	}
	return pluginrunner.EndpointDataType(0)
}

func (x *Links) GetLinkOption() LinkOption {
	if x != nil && x.LinkOption != nil {
		return *x.LinkOption
	}
	return LinkOption_Default
}

func (x *Links) GetMandatory() bool {
	if x != nil && x.Mandatory != nil {
		return *x.Mandatory
	}
	return false
}

var File_graph_graph_proto protoreflect.FileDescriptor

var file_graph_graph_proto_rawDesc = []byte{
	0x0a, 0x11, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x03, 0x0a, 0x05, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x12, 0x30, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x76, 0x69, 0x65, 0x77, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x08, 0x76,
	0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x0d, 0x69, 0x73, 0x53, 0x75, 0x62,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x0d, 0x69, 0x73, 0x53, 0x75, 0x62, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x88,
	0x01, 0x01, 0x12, 0x51, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x01, 0x52, 0x12,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x1a, 0x48, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x49, 0x0a, 0x0a, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x69,
	0x73, 0x53, 0x75, 0x62, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x42, 0x15, 0x0a, 0x13,
	0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x3a, 0x0a, 0x08, 0x76, 0x69, 0x65, 0x77, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a,
	0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x7a,
	0x6f, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x7a, 0x6f, 0x6f, 0x6d, 0x22,
	0x8e, 0x02, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x07,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52,
	0x07, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x58, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x07,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x59, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69,
	0x6e, 0x6b, 0x73, 0x49, 0x64, 0x73, 0x12, 0x31, 0x0a, 0x11, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x02, 0x52, 0x11, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x11, 0x6e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x03, 0x52, 0x11, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x58, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x59, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59,
	0x22, 0x90, 0x02, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x41, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x04, 0x68, 0x69, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x04, 0x68, 0x69, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68,
	0x69, 0x64, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x2e,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24,
	0x0a, 0x0d, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x22, 0x98, 0x06, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01,
	0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a,
	0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x02, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x14, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x14, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x14, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39,
	0x0a, 0x15, 0x73, 0x74, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4f, 0x6e,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52,
	0x15, 0x73, 0x74, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4f, 0x6e, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x07, 0x77, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x48, 0x06, 0x52,
	0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x73, 0x75, 0x62, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x42, 0x17, 0x0a, 0x15, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x73, 0x74,
	0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4f, 0x6e, 0x46, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x22,
	0x64, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x67, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x07, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x29, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x88, 0x03, 0x0a,
	0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x10, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72, 0x75, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x6c, 0x69, 0x6e, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x4c, 0x69, 0x6e, 0x6b,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x09, 0x6d, 0x61,
	0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c,
	0x69, 0x6e, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x61,
	0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x2a, 0x20, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x2a, 0x2d, 0x0a, 0x0b, 0x57, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f,
	0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x01, 0x2a, 0x36, 0x0a, 0x0a, 0x4c, 0x69, 0x6e, 0x6b,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x10, 0x02,
	0x42, 0x18, 0x5a, 0x16, 0x77, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_graph_graph_proto_rawDescOnce sync.Once
	file_graph_graph_proto_rawDescData = file_graph_graph_proto_rawDesc
)

func file_graph_graph_proto_rawDescGZIP() []byte {
	file_graph_graph_proto_rawDescOnce.Do(func() {
		file_graph_graph_proto_rawDescData = protoimpl.X.CompressGZIP(file_graph_graph_proto_rawDescData)
	})
	return file_graph_graph_proto_rawDescData
}

var file_graph_graph_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_graph_graph_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_graph_graph_proto_goTypes = []any{
	(DataType)(0),                            // 0: workflow.DataType
	(WarningType)(0),                         // 1: workflow.WarningType
	(LinkOption)(0),                          // 2: workflow.LinkOption
	(*Graph)(nil),                            // 3: workflow.Graph
	(*Viewport)(nil),                         // 4: workflow.viewport
	(*Metadata)(nil),                         // 5: workflow.Metadata
	(*Field)(nil),                            // 6: workflow.Field
	(*Section)(nil),                          // 7: workflow.Section
	(*Node)(nil),                             // 8: workflow.Node
	(*ResourceEngagement)(nil),               // 9: workflow.ResourceEngagement
	(*Warning)(nil),                          // 10: workflow.Warning
	(*Destinationnodes)(nil),                 // 11: workflow.Destinationnodes
	(*Links)(nil),                            // 12: workflow.Links
	nil,                                      // 13: workflow.Graph.NodesEntry
	nil,                                      // 14: workflow.Graph.LinksEntry
	(*pluginrunner.TransformationField)(nil), // 15: pluginrunner.TransformationField
	(pluginrunner.EndpointDataType)(0),       // 16: pluginrunner.EndpointDataType
}
var file_graph_graph_proto_depIdxs = []int32{
	13, // 0: workflow.Graph.nodes:type_name -> workflow.Graph.NodesEntry
	14, // 1: workflow.Graph.links:type_name -> workflow.Graph.LinksEntry
	4,  // 2: workflow.Graph.viewport:type_name -> workflow.viewport
	9,  // 3: workflow.Graph.resourceEngagement:type_name -> workflow.ResourceEngagement
	15, // 4: workflow.Field.definition:type_name -> pluginrunner.TransformationField
	5,  // 5: workflow.Field.metadata:type_name -> workflow.Metadata
	0,  // 6: workflow.Field.dataType:type_name -> workflow.DataType
	6,  // 7: workflow.Section.fields:type_name -> workflow.Field
	5,  // 8: workflow.Section.metadata:type_name -> workflow.Metadata
	7,  // 9: workflow.Node.inputs:type_name -> workflow.Section
	7,  // 10: workflow.Node.outputs:type_name -> workflow.Section
	5,  // 11: workflow.Node.metadata:type_name -> workflow.Metadata
	10, // 12: workflow.Node.warning:type_name -> workflow.Warning
	1,  // 13: workflow.Warning.Type:type_name -> workflow.WarningType
	11, // 14: workflow.Links.destinationNodes:type_name -> workflow.Destinationnodes
	16, // 15: workflow.Links.dataType:type_name -> pluginrunner.EndpointDataType
	2,  // 16: workflow.Links.linkOption:type_name -> workflow.LinkOption
	8,  // 17: workflow.Graph.NodesEntry.value:type_name -> workflow.Node
	12, // 18: workflow.Graph.LinksEntry.value:type_name -> workflow.Links
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_graph_graph_proto_init() }
func file_graph_graph_proto_init() {
	if File_graph_graph_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_graph_graph_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Graph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_graph_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Viewport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_graph_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_graph_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_graph_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Section); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_graph_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_graph_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ResourceEngagement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_graph_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Warning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_graph_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Destinationnodes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_graph_graph_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Links); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_graph_graph_proto_msgTypes[0].OneofWrappers = []any{}
	file_graph_graph_proto_msgTypes[2].OneofWrappers = []any{}
	file_graph_graph_proto_msgTypes[3].OneofWrappers = []any{}
	file_graph_graph_proto_msgTypes[5].OneofWrappers = []any{}
	file_graph_graph_proto_msgTypes[9].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_graph_graph_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_graph_graph_proto_goTypes,
		DependencyIndexes: file_graph_graph_proto_depIdxs,
		EnumInfos:         file_graph_graph_proto_enumTypes,
		MessageInfos:      file_graph_graph_proto_msgTypes,
	}.Build()
	File_graph_graph_proto = out.File
	file_graph_graph_proto_rawDesc = nil
	file_graph_graph_proto_goTypes = nil
	file_graph_graph_proto_depIdxs = nil
}
