// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: pluginrunner/pluginrunner.proto

package pluginrunner

import (
	schema "github.com/MyWeHub/plugin-sdk/gen/schema"
	_ "github.com/amsokol/protoc-gen-gotag/tagger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EndpointDataType int32

const (
	EndpointDataType_FIELD EndpointDataType = 0
	EndpointDataType_EVENT EndpointDataType = 1
)

// Enum value maps for EndpointDataType.
var (
	EndpointDataType_name = map[int32]string{
		0: "FIELD",
		1: "EVENT",
	}
	EndpointDataType_value = map[string]int32{
		"FIELD": 0,
		"EVENT": 1,
	}
)

func (x EndpointDataType) Enum() *EndpointDataType {
	p := new(EndpointDataType)
	*p = x
	return p
}

func (x EndpointDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EndpointDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_pluginrunner_pluginrunner_proto_enumTypes[0].Descriptor()
}

func (EndpointDataType) Type() protoreflect.EnumType {
	return &file_pluginrunner_pluginrunner_proto_enumTypes[0]
}

func (x EndpointDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EndpointDataType.Descriptor instead.
func (EndpointDataType) EnumDescriptor() ([]byte, []int) {
	return file_pluginrunner_pluginrunner_proto_rawDescGZIP(), []int{0}
}

type InputTestRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs        *structpb.Struct `protobuf:"bytes,1,opt,name=inputs,proto3" json:"inputs,omitempty"`
	Configuration []byte           `protobuf:"bytes,2,opt,name=configuration,proto3" json:"configuration,omitempty"`
	Action        int32            `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	NodeId        *string          `protobuf:"bytes,4,opt,name=nodeId,proto3,oneof" json:"nodeId,omitempty"`
	Events        *structpb.Struct `protobuf:"bytes,5,opt,name=events,proto3" json:"events,omitempty"`
}

func (x *InputTestRequestV2) Reset() {
	*x = InputTestRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginrunner_pluginrunner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputTestRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputTestRequestV2) ProtoMessage() {}

func (x *InputTestRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_pluginrunner_pluginrunner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputTestRequestV2.ProtoReflect.Descriptor instead.
func (*InputTestRequestV2) Descriptor() ([]byte, []int) {
	return file_pluginrunner_pluginrunner_proto_rawDescGZIP(), []int{0}
}

func (x *InputTestRequestV2) GetInputs() *structpb.Struct {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *InputTestRequestV2) GetConfiguration() []byte {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *InputTestRequestV2) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *InputTestRequestV2) GetNodeId() string {
	if x != nil && x.NodeId != nil {
		return *x.NodeId
	}
	return ""
}

func (x *InputTestRequestV2) GetEvents() *structpb.Struct {
	if x != nil {
		return x.Events
	}
	return nil
}

type InputTestResponseV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outputs *structpb.Struct `protobuf:"bytes,1,opt,name=outputs,proto3" json:"outputs,omitempty"`
	Events  *structpb.Struct `protobuf:"bytes,2,opt,name=events,proto3" json:"events,omitempty"`
}

func (x *InputTestResponseV2) Reset() {
	*x = InputTestResponseV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginrunner_pluginrunner_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputTestResponseV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputTestResponseV2) ProtoMessage() {}

func (x *InputTestResponseV2) ProtoReflect() protoreflect.Message {
	mi := &file_pluginrunner_pluginrunner_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputTestResponseV2.ProtoReflect.Descriptor instead.
func (*InputTestResponseV2) Descriptor() ([]byte, []int) {
	return file_pluginrunner_pluginrunner_proto_rawDescGZIP(), []int{1}
}

func (x *InputTestResponseV2) GetOutputs() *structpb.Struct {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *InputTestResponseV2) GetEvents() *structpb.Struct {
	if x != nil {
		return x.Events
	}
	return nil
}

type InputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs           []*TransformationField `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	TransformationId string                 `protobuf:"bytes,2,opt,name=transformationId,proto3" json:"transformationId,omitempty"`
	NodeId           string                 `protobuf:"bytes,3,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Action           int32                  `protobuf:"varint,4,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *InputRequest) Reset() {
	*x = InputRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginrunner_pluginrunner_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputRequest) ProtoMessage() {}

func (x *InputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pluginrunner_pluginrunner_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputRequest.ProtoReflect.Descriptor instead.
func (*InputRequest) Descriptor() ([]byte, []int) {
	return file_pluginrunner_pluginrunner_proto_rawDescGZIP(), []int{2}
}

func (x *InputRequest) GetInputs() []*TransformationField {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *InputRequest) GetTransformationId() string {
	if x != nil {
		return x.TransformationId
	}
	return ""
}

func (x *InputRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *InputRequest) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

type InputRequestV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs           *structpb.Struct `protobuf:"bytes,1,opt,name=inputs,proto3" json:"inputs,omitempty"`
	TransformationId string           `protobuf:"bytes,2,opt,name=transformationId,proto3" json:"transformationId,omitempty"`
	NodeId           string           `protobuf:"bytes,3,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Action           int32            `protobuf:"varint,4,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *InputRequestV2) Reset() {
	*x = InputRequestV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginrunner_pluginrunner_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputRequestV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputRequestV2) ProtoMessage() {}

func (x *InputRequestV2) ProtoReflect() protoreflect.Message {
	mi := &file_pluginrunner_pluginrunner_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputRequestV2.ProtoReflect.Descriptor instead.
func (*InputRequestV2) Descriptor() ([]byte, []int) {
	return file_pluginrunner_pluginrunner_proto_rawDescGZIP(), []int{3}
}

func (x *InputRequestV2) GetInputs() *structpb.Struct {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *InputRequestV2) GetTransformationId() string {
	if x != nil {
		return x.TransformationId
	}
	return ""
}

func (x *InputRequestV2) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *InputRequestV2) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

type InputTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs        []*TransformationField `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Configuration []byte                 `protobuf:"bytes,2,opt,name=configuration,proto3" json:"configuration,omitempty"`
	Action        int32                  `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	NodeId        *string                `protobuf:"bytes,4,opt,name=nodeId,proto3,oneof" json:"nodeId,omitempty"`
}

func (x *InputTestRequest) Reset() {
	*x = InputTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginrunner_pluginrunner_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputTestRequest) ProtoMessage() {}

func (x *InputTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pluginrunner_pluginrunner_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputTestRequest.ProtoReflect.Descriptor instead.
func (*InputTestRequest) Descriptor() ([]byte, []int) {
	return file_pluginrunner_pluginrunner_proto_rawDescGZIP(), []int{4}
}

func (x *InputTestRequest) GetInputs() []*TransformationField {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *InputTestRequest) GetConfiguration() []byte {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *InputTestRequest) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *InputTestRequest) GetNodeId() string {
	if x != nil && x.NodeId != nil {
		return *x.NodeId
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginrunner_pluginrunner_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_pluginrunner_pluginrunner_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_pluginrunner_pluginrunner_proto_rawDescGZIP(), []int{5}
}

type InputTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outputs []*TransformationField `protobuf:"bytes,1,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Events  []*EventField          `protobuf:"bytes,2,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *InputTestResponse) Reset() {
	*x = InputTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginrunner_pluginrunner_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputTestResponse) ProtoMessage() {}

func (x *InputTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pluginrunner_pluginrunner_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputTestResponse.ProtoReflect.Descriptor instead.
func (*InputTestResponse) Descriptor() ([]byte, []int) {
	return file_pluginrunner_pluginrunner_proto_rawDescGZIP(), []int{6}
}

func (x *InputTestResponse) GetOutputs() []*TransformationField {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *InputTestResponse) GetEvents() []*EventField {
	if x != nil {
		return x.Events
	}
	return nil
}

type EventField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	ActualPath string `protobuf:"bytes,3,opt,name=actualPath,proto3" json:"actualPath,omitempty"`
}

func (x *EventField) Reset() {
	*x = EventField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginrunner_pluginrunner_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventField) ProtoMessage() {}

func (x *EventField) ProtoReflect() protoreflect.Message {
	mi := &file_pluginrunner_pluginrunner_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventField.ProtoReflect.Descriptor instead.
func (*EventField) Descriptor() ([]byte, []int) {
	return file_pluginrunner_pluginrunner_proto_rawDescGZIP(), []int{7}
}

func (x *EventField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EventField) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *EventField) GetActualPath() string {
	if x != nil {
		return x.ActualPath
	}
	return ""
}

type TransformationFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fields []*TransformationField `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *TransformationFields) Reset() {
	*x = TransformationFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginrunner_pluginrunner_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransformationFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformationFields) ProtoMessage() {}

func (x *TransformationFields) ProtoReflect() protoreflect.Message {
	mi := &file_pluginrunner_pluginrunner_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformationFields.ProtoReflect.Descriptor instead.
func (*TransformationFields) Descriptor() ([]byte, []int) {
	return file_pluginrunner_pluginrunner_proto_rawDescGZIP(), []int{8}
}

func (x *TransformationFields) GetFields() []*TransformationField {
	if x != nil {
		return x.Fields
	}
	return nil
}

type TransformationField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Schema *schema.FieldSchemaDef `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	// Types that are assignable to Value:
	//
	//	*TransformationField_NumberValue
	//	*TransformationField_StringValue
	//	*TransformationField_ByteValue
	//	*TransformationField_DateValue
	//	*TransformationField_DateTimeValue
	//	*TransformationField_BooleanValue
	Value      isTransformationField_Value `protobuf_oneof:"Value" bson:",omitempty"`
	Path       string                      `protobuf:"bytes,9,opt,name=path,proto3" json:"path,omitempty"`
	ActualPath *string                     `protobuf:"bytes,10,opt,name=actualPath,proto3,oneof" json:"actualPath,omitempty"`
	SectionId  string                      `protobuf:"bytes,11,opt,name=sectionId,proto3" json:"sectionId,omitempty"`
	DataType   *EndpointDataType           `protobuf:"varint,12,opt,name=dataType,proto3,enum=pluginrunner.EndpointDataType,oneof" json:"dataType,omitempty"`
	Hide       *bool                       `protobuf:"varint,13,opt,name=hide,proto3,oneof" json:"hide,omitempty"`
}

func (x *TransformationField) Reset() {
	*x = TransformationField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginrunner_pluginrunner_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransformationField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformationField) ProtoMessage() {}

func (x *TransformationField) ProtoReflect() protoreflect.Message {
	mi := &file_pluginrunner_pluginrunner_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformationField.ProtoReflect.Descriptor instead.
func (*TransformationField) Descriptor() ([]byte, []int) {
	return file_pluginrunner_pluginrunner_proto_rawDescGZIP(), []int{9}
}

func (x *TransformationField) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TransformationField) GetSchema() *schema.FieldSchemaDef {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (m *TransformationField) GetValue() isTransformationField_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *TransformationField) GetNumberValue() float64 {
	if x, ok := x.GetValue().(*TransformationField_NumberValue); ok {
		return x.NumberValue
	}
	return 0
}

func (x *TransformationField) GetStringValue() string {
	if x, ok := x.GetValue().(*TransformationField_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *TransformationField) GetByteValue() []byte {
	if x, ok := x.GetValue().(*TransformationField_ByteValue); ok {
		return x.ByteValue
	}
	return nil
}

func (x *TransformationField) GetDateValue() string {
	if x, ok := x.GetValue().(*TransformationField_DateValue); ok {
		return x.DateValue
	}
	return ""
}

func (x *TransformationField) GetDateTimeValue() string {
	if x, ok := x.GetValue().(*TransformationField_DateTimeValue); ok {
		return x.DateTimeValue
	}
	return ""
}

func (x *TransformationField) GetBooleanValue() bool {
	if x, ok := x.GetValue().(*TransformationField_BooleanValue); ok {
		return x.BooleanValue
	}
	return false
}

func (x *TransformationField) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *TransformationField) GetActualPath() string {
	if x != nil && x.ActualPath != nil {
		return *x.ActualPath
	}
	return ""
}

func (x *TransformationField) GetSectionId() string {
	if x != nil {
		return x.SectionId
	}
	return ""
}

func (x *TransformationField) GetDataType() EndpointDataType {
	if x != nil && x.DataType != nil {
		return *x.DataType
	}
	return EndpointDataType_FIELD
}

func (x *TransformationField) GetHide() bool {
	if x != nil && x.Hide != nil {
		return *x.Hide
	}
	return false
}

type isTransformationField_Value interface {
	isTransformationField_Value()
}

type TransformationField_NumberValue struct {
	NumberValue float64 `protobuf:"fixed64,3,opt,name=numberValue,proto3,oneof" bson:",omitempty"`
}

type TransformationField_StringValue struct {
	StringValue string `protobuf:"bytes,4,opt,name=stringValue,proto3,oneof" bson:",omitempty"`
}

type TransformationField_ByteValue struct {
	ByteValue []byte `protobuf:"bytes,5,opt,name=byteValue,proto3,oneof" bson:",omitempty"`
}

type TransformationField_DateValue struct {
	DateValue string `protobuf:"bytes,6,opt,name=dateValue,proto3,oneof" bson:",omitempty"`
}

type TransformationField_DateTimeValue struct {
	DateTimeValue string `protobuf:"bytes,7,opt,name=dateTimeValue,proto3,oneof" bson:",omitempty"`
}

type TransformationField_BooleanValue struct {
	BooleanValue bool `protobuf:"varint,8,opt,name=booleanValue,proto3,oneof" bson:",omitempty"`
}

func (*TransformationField_NumberValue) isTransformationField_Value() {}

func (*TransformationField_StringValue) isTransformationField_Value() {}

func (*TransformationField_ByteValue) isTransformationField_Value() {}

func (*TransformationField_DateValue) isTransformationField_Value() {}

func (*TransformationField_DateTimeValue) isTransformationField_Value() {}

func (*TransformationField_BooleanValue) isTransformationField_Value() {}

var File_pluginrunner_pluginrunner_proto protoreflect.FileDescriptor

var file_pluginrunner_pluginrunner_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x67, 0x6f, 0x74, 0x61, 0x67, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xdc, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x2f, 0x0a, 0x06, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x22, 0x79, 0x0a, 0x13, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa5, 0x01, 0x0a,
	0x0c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a,
	0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9d, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x12, 0x2f, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb3, 0x01, 0x0a, 0x10, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x07, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x54, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x22, 0x51,
	0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x22, 0xb6, 0x05, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x44, 0x65, 0x66, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3a, 0x0a,
	0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16,
	0x9a, 0x84, 0x9e, 0x03, 0x11, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x2c, 0x6f, 0x6d, 0x69, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x62,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x48, 0x00, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a,
	0x09, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x48, 0x00, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84,
	0x9e, 0x03, 0x11, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x42, 0x16, 0x9a, 0x84, 0x9e,
	0x03, 0x11, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x6c, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x48, 0x02, 0x52, 0x08,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x68,
	0x69, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x04, 0x68, 0x69, 0x64,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x1f, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x9a,
	0x84, 0x9e, 0x03, 0x11, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x50, 0x61, 0x74, 0x68, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x68, 0x69, 0x64, 0x65, 0x2a, 0x28, 0x0a, 0x10, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09,
	0x0a, 0x05, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x10, 0x01, 0x32, 0xc1, 0x02, 0x0a, 0x13, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x07,
	0x52, 0x75, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x52, 0x75, 0x6e, 0x54,
	0x65, 0x73, 0x74, 0x76, 0x32, 0x12, 0x20, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x32, 0x1a, 0x21, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x12, 0x42, 0x0a, 0x03, 0x52, 0x75,
	0x6e, 0x12, 0x1a, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48,
	0x0a, 0x05, 0x52, 0x75, 0x6e, 0x56, 0x32, 0x12, 0x1c, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x56, 0x32, 0x1a, 0x21, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x32, 0x42, 0x15, 0x5a, 0x13, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pluginrunner_pluginrunner_proto_rawDescOnce sync.Once
	file_pluginrunner_pluginrunner_proto_rawDescData = file_pluginrunner_pluginrunner_proto_rawDesc
)

func file_pluginrunner_pluginrunner_proto_rawDescGZIP() []byte {
	file_pluginrunner_pluginrunner_proto_rawDescOnce.Do(func() {
		file_pluginrunner_pluginrunner_proto_rawDescData = protoimpl.X.CompressGZIP(file_pluginrunner_pluginrunner_proto_rawDescData)
	})
	return file_pluginrunner_pluginrunner_proto_rawDescData
}

var file_pluginrunner_pluginrunner_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pluginrunner_pluginrunner_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pluginrunner_pluginrunner_proto_goTypes = []any{
	(EndpointDataType)(0),         // 0: pluginrunner.EndpointDataType
	(*InputTestRequestV2)(nil),    // 1: pluginrunner.InputTestRequestV2
	(*InputTestResponseV2)(nil),   // 2: pluginrunner.InputTestResponseV2
	(*InputRequest)(nil),          // 3: pluginrunner.InputRequest
	(*InputRequestV2)(nil),        // 4: pluginrunner.InputRequestV2
	(*InputTestRequest)(nil),      // 5: pluginrunner.InputTestRequest
	(*Empty)(nil),                 // 6: pluginrunner.Empty
	(*InputTestResponse)(nil),     // 7: pluginrunner.InputTestResponse
	(*EventField)(nil),            // 8: pluginrunner.EventField
	(*TransformationFields)(nil),  // 9: pluginrunner.TransformationFields
	(*TransformationField)(nil),   // 10: pluginrunner.TransformationField
	(*structpb.Struct)(nil),       // 11: google.protobuf.Struct
	(*schema.FieldSchemaDef)(nil), // 12: schema.FieldSchemaDef
}
var file_pluginrunner_pluginrunner_proto_depIdxs = []int32{
	11, // 0: pluginrunner.InputTestRequestV2.inputs:type_name -> google.protobuf.Struct
	11, // 1: pluginrunner.InputTestRequestV2.events:type_name -> google.protobuf.Struct
	11, // 2: pluginrunner.InputTestResponseV2.outputs:type_name -> google.protobuf.Struct
	11, // 3: pluginrunner.InputTestResponseV2.events:type_name -> google.protobuf.Struct
	10, // 4: pluginrunner.InputRequest.inputs:type_name -> pluginrunner.TransformationField
	11, // 5: pluginrunner.InputRequestV2.inputs:type_name -> google.protobuf.Struct
	10, // 6: pluginrunner.InputTestRequest.inputs:type_name -> pluginrunner.TransformationField
	10, // 7: pluginrunner.InputTestResponse.outputs:type_name -> pluginrunner.TransformationField
	8,  // 8: pluginrunner.InputTestResponse.events:type_name -> pluginrunner.EventField
	10, // 9: pluginrunner.TransformationFields.fields:type_name -> pluginrunner.TransformationField
	12, // 10: pluginrunner.TransformationField.schema:type_name -> schema.FieldSchemaDef
	0,  // 11: pluginrunner.TransformationField.dataType:type_name -> pluginrunner.EndpointDataType
	5,  // 12: pluginrunner.PluginRunnerService.RunTest:input_type -> pluginrunner.InputTestRequest
	1,  // 13: pluginrunner.PluginRunnerService.RunTestv2:input_type -> pluginrunner.InputTestRequestV2
	3,  // 14: pluginrunner.PluginRunnerService.Run:input_type -> pluginrunner.InputRequest
	4,  // 15: pluginrunner.PluginRunnerService.RunV2:input_type -> pluginrunner.InputRequestV2
	7,  // 16: pluginrunner.PluginRunnerService.RunTest:output_type -> pluginrunner.InputTestResponse
	2,  // 17: pluginrunner.PluginRunnerService.RunTestv2:output_type -> pluginrunner.InputTestResponseV2
	7,  // 18: pluginrunner.PluginRunnerService.Run:output_type -> pluginrunner.InputTestResponse
	2,  // 19: pluginrunner.PluginRunnerService.RunV2:output_type -> pluginrunner.InputTestResponseV2
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_pluginrunner_pluginrunner_proto_init() }
func file_pluginrunner_pluginrunner_proto_init() {
	if File_pluginrunner_pluginrunner_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pluginrunner_pluginrunner_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*InputTestRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginrunner_pluginrunner_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*InputTestResponseV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginrunner_pluginrunner_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*InputRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginrunner_pluginrunner_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*InputRequestV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginrunner_pluginrunner_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*InputTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginrunner_pluginrunner_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginrunner_pluginrunner_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*InputTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginrunner_pluginrunner_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*EventField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginrunner_pluginrunner_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*TransformationFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginrunner_pluginrunner_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TransformationField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pluginrunner_pluginrunner_proto_msgTypes[0].OneofWrappers = []any{}
	file_pluginrunner_pluginrunner_proto_msgTypes[4].OneofWrappers = []any{}
	file_pluginrunner_pluginrunner_proto_msgTypes[9].OneofWrappers = []any{
		(*TransformationField_NumberValue)(nil),
		(*TransformationField_StringValue)(nil),
		(*TransformationField_ByteValue)(nil),
		(*TransformationField_DateValue)(nil),
		(*TransformationField_DateTimeValue)(nil),
		(*TransformationField_BooleanValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pluginrunner_pluginrunner_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pluginrunner_pluginrunner_proto_goTypes,
		DependencyIndexes: file_pluginrunner_pluginrunner_proto_depIdxs,
		EnumInfos:         file_pluginrunner_pluginrunner_proto_enumTypes,
		MessageInfos:      file_pluginrunner_pluginrunner_proto_msgTypes,
	}.Build()
	File_pluginrunner_pluginrunner_proto = out.File
	file_pluginrunner_pluginrunner_proto_rawDesc = nil
	file_pluginrunner_pluginrunner_proto_goTypes = nil
	file_pluginrunner_pluginrunner_proto_depIdxs = nil
}
